generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_URL_UNPOOLED")
}

model Dictionary {
  id            String     @id @default(cuid())
  korean        String     @unique
  english       String?
  russian       String
  pronunciation String?
  definition    String?
  definition_ru String?
  category      String?
  difficulty    String?
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  examples      Example[]
  stats         WordStats?
}

model Statistics {
  id          String   @id @default(cuid())
  totalVisits Int      @default(0)
  lastUpdated DateTime @updatedAt
}

model MenuStats {
  id          String   @id @default(cuid())
  menuId      String   @unique
  name        String
  nameRu      String
  count       Int      @default(0)
  lastClicked DateTime @default(now())
}

model WordStats {
  id            String     @id @default(cuid())
  korean        String     @unique
  count         Int        @default(0)
  lastUsed      DateTime   @default(now())
  dictionary    Dictionary @relation(fields: [korean], references: [korean])
}

model Notice {
  id        String   @id @default(cuid())
  title     String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model GameRecord {
  id        String   @id @default(cuid())
  score     Int
  level     Int
  duration  Int
  createdAt DateTime @default(now())
}

model Example {
  id           Int        @id @default(autoincrement())
  text         String
  dictionaryId String
  dictionary   Dictionary @relation(fields: [dictionaryId], references: [id])
}

model Suggestion {
  id        String   @id @default(cuid())
  title     String
  content   String
  status    String   @default("pending")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
